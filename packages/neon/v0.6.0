let Registry = ../../RegistryV1.dhall

in  Registry.Package::{
    , name = "neon"
    , license = Registry.License.MIT
    , repository = Some
        (Registry.Repo.GitHub { owner = "tfausak", repo = "purescript-neon" })
    , devDependencies = toMap { test-unit = "^13.0.0", quickcheck = "^4.6.1" }
    , dependencies =
        toMap
          { free = "^4.2.0"
          , proxy = "^2.0.0"
          , exceptions = "^3.0.0"
          , newtype = "^2.0.0"
          , maps = "^3.0.0"
          , control = "^3.0.0"
          , console = "^3.0.0"
          , either = "^3.0.0"
          , profunctor = "^3.2.0"
          , folds = "^3.1.0"
          , arrays = "^4.0.1"
          , maybe = "^3.0.0"
          , exists = "^3.0.0"
          , distributive = "^3.0.0"
          , unfoldable = "^3.0.0"
          , invariant = "^3.0.0"
          , lazy = "^3.0.0"
          , monoid = "^3.0.0"
          , aff = "^4.0.0"
          , foldable-traversable = "^3.6.0"
          , debug = "^3.0.0"
          , tailrec = "^3.3.0"
          , lens = "^3.0.0"
          , functors = "^2.0.0"
          , prelude = "^3.0.0"
          , st = "^3.0.0"
          , bifunctors = "^3.0.0"
          , nonempty = "^4.0.0"
          , contravariant = "^3.0.0"
          , assert = "^3.0.0"
          , generics = "^4.0.0"
          , unsafe-coerce = "^3.0.0"
          , refs = "^3.0.0"
          , integers = "^3.2.0"
          , eff = "^3.1.0"
          , const = "^3.0.0"
          , transformers = "^3.0.0"
          , globals = "^3.0.0"
          , enums = "^3.1.0"
          , catenable-lists = "^4.0.0"
          , random = "^3.0.0"
          , parallel = "^3.0.0"
          , tuples = "^4.0.0"
          , strings = "^3.0.0"
          , identity = "^3.0.0"
          , sets = "^3.1.0"
          , lists = "^4.0.0"
          , nullable = "^3.0.0"
          , datetime = "^3.0.0"
          , functions = "^3.0.0"
          }
    }
